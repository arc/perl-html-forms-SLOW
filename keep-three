#!/usr/local/bin/perl
use strict;
use warnings;
use lib 'HTML-Form-6.03/lib';

use Carp;
use Cwd;
use CPAN::DistnameInfo;
use File::Spec;
use WWW::Mechanize;

my $mech = WWW::Mechanize->new;
my $cwd  = cwd;
my $res = $mech->get(
  qq{file://$cwd/delete-files.html}
);

my $username = 'RJBS';

my @files = grep { defined }
            map  { $_->possible_values }
            grep { $_->type eq 'checkbox' }
            $mech->form_number(1)->inputs;

my %found;

FILE: for my $file (@files) {
  next FILE if $file eq 'CHECKSUMS';

  my $path = sprintf "authors/id/%s/%s/%s/%s",
    substr($username, 0, 1),
    substr($username, 0, 2),
    $username,
    $file;

  my $dni;

  if ($file =~ m{\.(readme|meta)\z}) {
    my $ext = $1;
    (my $fake = $path) =~ s{\.$1\z}{.tar.gz};

    $dni = CPAN::DistnameInfo->new($fake);
  } else {
    $dni = CPAN::DistnameInfo->new($path);

    unless (defined $dni->extension) {
      warn "ignoring unknown path type: $path";
      next FILE;
    }
  }

  next if $dni->dist eq 'perl';

  my $by_name = $found{ $dni->dist } ||= {};
  my $dist = $by_name->{ eval $dni->version } ||= { values => [] };
  push @{ $dist->{values} }, $file;
}

$mech->form_number(1);

my %ticked;

for my $key (sort keys %found) {
  my $dist = $found{ $key };
  next unless keys %$dist > 3;

  next if grep {; ! length } keys %$dist;
  # use Data::Dumper; warn Dumper([ $key => $dist ]);

  my @versions = sort { $b <=> $a } keys %$dist;
  for my $version (map { $versions[$_] } 3 .. $#versions) {
    for my $file (@{ $dist->{ $version }{values} }) {
      print "scheduling $file for deletion\n";
      $ticked{$file}++;
    }
  }
}

print "ticked ", scalar keys %ticked, " tickey boxes\n";

for my $input ($mech->find_all_inputs(name => 'pause99_delete_files_FILE')) {
  for my $val ($input->possible_values) {
    next if !defined $val || !$ticked{$val};
    $input->value(1);
    last;
  }
}
